/* Combined JavaScript File for Muster & Dikson Website */
/* This file combines multiple JS files to reduce HTTP requests */

// Critical JavaScript functions
(function() {
    'use strict';

    // Performance optimization: Load scripts asynchronously
    function loadScript(src, callback) {
        const script = document.createElement('script');
        script.src = src;
        script.async = true;
        script.onload = callback;
        document.head.appendChild(script);
    }

    // Load non-critical scripts after page load
    function loadNonCriticalScripts() {
        const scripts = [
            '/vendor/template/parallax/parallax.min.js',
            '/vendor/template/isotope/isotope.pkgd.min.js',
            '/vendor/template/imagesloaded/imagesloaded.pkgd.min.js',
            '/vendor/template/magnific-popup/jquery.magnific-popup.min.js',
            '/vendor/template/owl-carousel/owl.carousel.min.js'
        ];

        scripts.forEach((src, index) => {
            setTimeout(() => {
                loadScript(src);
            }, index * 100); // Stagger loading
        });
    }

    // Critical functionality that needs to load immediately
    function initCriticalFeatures() {
        // Add skip link for accessibility
        const skipLink = document.createElement('a');
        skipLink.href = '#main-content';
        skipLink.className = 'skip-link';
        skipLink.textContent = 'Aller au contenu principal';
        document.body.insertBefore(skipLink, document.body.firstChild);

        // Initialize lazy loading for images
        if ('IntersectionObserver' in window) {
            const imageObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        img.src = img.dataset.src;
                        img.classList.remove('lazy-img');
                        img.classList.add('loaded');
                        observer.unobserve(img);
                    }
                });
            });

            document.querySelectorAll('.lazy-img').forEach(img => {
                imageObserver.observe(img);
            });
        }

        // Initialize service worker for caching (if supported)
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('SW registered: ', registration);
                    })
                    .catch(registrationError => {
                        console.log('SW registration failed: ', registrationError);
                    });
            });
        }
    }

    // Global cart functionality
    window.addToCartGlobal = async function(productId, quantity = 1) {
        try {
            const response = await fetch('/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: JSON.stringify({
                    product_id: productId,
                    quantity: quantity
                })
            });

            if (response.ok) {
                const data = await response.json();
                // Update cart UI
                updateCartUI(data);
                return true;
            }
            return false;
        } catch (error) {
            console.error('Error adding to cart:', error);
            return false;
        }
    };

    // Update cart UI
    function updateCartUI(cartData) {
        // Update cart count
        const cartCount = document.querySelector('.cart-count');
        if (cartCount && cartData.count) {
            cartCount.textContent = cartData.count;
        }

        // Show success message
        showNotification('Produit ajoutÃ© au panier!', 'success');
    }

    // Show notifications
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.textContent = message;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? '#4CAF50' : '#2196F3'};
            color: white;
            padding: 15px 20px;
            border-radius: 4px;
            z-index: 10000;
            animation: slideIn 0.3s ease;
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease';
            setTimeout(() => {
                document.body.removeChild(notification);
            }, 300);
        }, 3000);
    }

    // Initialize on DOM ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initCriticalFeatures);
    } else {
        initCriticalFeatures();
    }

    // Load non-critical scripts after page load
    window.addEventListener('load', loadNonCriticalScripts);

    // Add CSS animations
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
        .skip-link {
            position: absolute;
            top: -40px;
            left: 6px;
            background: #20c7d9;
            color: white;
            padding: 8px;
            text-decoration: none;
            z-index: 1000;
        }
        .skip-link:focus {
            top: 6px;
        }
    `;
    document.head.appendChild(style);

})();

// jQuery-dependent functions (loaded after jQuery)
function initJQueryFeatures() {
    if (typeof jQuery === 'undefined') {
        setTimeout(initJQueryFeatures, 100);
        return;
    }

    // Initialize carousels
    $('.owl-carousel').each(function() {
        const $this = $(this);
        const options = $this.data('owl-options') || {};
        $this.owlCarousel(options);
    });

    // Initialize magnific popup
    $('.popup-link').magnificPopup({
        type: 'image',
        gallery: {
            enabled: true
        }
    });

    // Smooth scrolling for anchor links
    $('a[href^="#"]').on('click', function(e) {
        e.preventDefault();
        const target = $(this.getAttribute('href'));
        if (target.length) {
            $('html, body').animate({
                scrollTop: target.offset().top - 100
            }, 500);
        }
    });
}

// Initialize jQuery features when jQuery is loaded
if (typeof jQuery !== 'undefined') {
    initJQueryFeatures();
} else {
    window.addEventListener('load', initJQueryFeatures);
}
